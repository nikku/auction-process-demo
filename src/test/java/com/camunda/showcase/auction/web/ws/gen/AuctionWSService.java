
package com.camunda.showcase.auction.web.ws.gen;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.3-b02-
 * Generated source version: 2.1
 *
 */
@WebServiceClient(name = "AuctionWSService", targetNamespace = "http://ws.web.auction.showcase.camunda.com/", wsdlLocation = "file:/E:/Camunda/eclipse/ca048-ws/auction-app/src/wsdl/AuctionWS.wsdl")
public class AuctionWSService
    extends Service
{

    private final static URL AUCTIONWSSERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(com.camunda.showcase.auction.web.ws.gen.AuctionWSService.class.getName());

    static {
        URL url = null;
        try {
            url = new URL("http://localhost:8080/auction-app/AuctionWS?wsdl");
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: 'http://localhost:8080/auction-app/AuctionWS?wsdl', retrying as a local file");
            logger.warning(e.getMessage());
        }
        AUCTIONWSSERVICE_WSDL_LOCATION = url;
    }

    public AuctionWSService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AuctionWSService() {
        super(AUCTIONWSSERVICE_WSDL_LOCATION, new QName("http://ws.web.auction.showcase.camunda.com/", "AuctionWSService"));
    }

    /**
     *
     * @return
     *     returns AuctionWS
     */
    @WebEndpoint(name = "AuctionWSPort")
    public AuctionWS getAuctionWSPort() {
        return super.getPort(new QName("http://ws.web.auction.showcase.camunda.com/", "AuctionWSPort"), AuctionWS.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AuctionWS
     */
    @WebEndpoint(name = "AuctionWSPort")
    public AuctionWS getAuctionWSPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://ws.web.auction.showcase.camunda.com/", "AuctionWSPort"), AuctionWS.class, features);
    }

}
